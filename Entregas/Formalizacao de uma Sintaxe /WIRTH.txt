LETRA = “A”|“B”|“C”|“D”|“E”|“F”|“G”|“H”|“I”|“J”|“K”|“L”|“M”|“N”|“O”|“P”|“Q”|“R”|“S”| “T”|“U”|“V”|“W”|“X”|“Y”|“Z”|“a”|“b”|“c”|“d”|“e”|“f”|“g”|“h”|“i”|“j”|“k”|“l”| “m”|“n”|“o”|“p”|“q”|“r”|“s”|“t”|“u”|“v”|“w”|“x”|“y”|“z”.
DIGITO = “0”|“1”|“2”|“3”|“4”|“5”|“6”|“7”|“8”|“9”.
NUM = NUM_INT | NUM_REAL.
NUM_INT = DIGITO{DIGITO}.
NUM_REAL = NUM_INT “.” NUM_INT.
BOOLEAN = “true”| “false”.
EXPR = EXPR “+” TERMO|EXPR “-” TERMO| TERMO.
TERMO =	TERMO “*” FATOR | TERMO “/” FATOR | TERMO “%” FATOR | FATOR.
FATOR =	VALOR | NUM | “(” EXPR “)”.
VALOR =	ID{“.” ID}.
ID = LETRA{(LETRA|DIGITO)}.
TIPO =	“int”|“float”|“char”|“boolean”|“void”.
DECL_SIMP_VAR =	ID ID.
DECL_AGREG_HOM = ID ID[NUM_INT].
DECL_VAR = DECL_SIMP_VAR | DECL_AGREG_HOM.
DECL_VARS =	{DECL_VAR “\n”}.
DECL_AGREG_HET = “struct” ID “\n” DECL_VARS “end”.
DECL_TIPO =	“newtype” ID ID.
DECL_PARAMS =	ID ID {“,” ID ID}.
COMANDO = COMANDO_ATR | COMANDO_COND |COMANDO_ITER | CHAMADA_FUNCAO | COMANDO_RETORNO | COMANDO_CAST | COMANDO_SAIDA | COMANDO_ENTR.
COMANDOS = {COMANDO “\n”}.
CONDICAO = “not” “(”CONDICAO“)” | CONDICAO |CONDICAO “or” CONDICAO | CONDICAO “and” CONDICAO | ID | BOOLEAN | EXPR “>” EXPR | EXPR “>=” EXPR | EXPR “<” EXPR | EXPR “<=” EXPR | EXPR “==” EXPR | EXPR “!=” EXPR.
COMANDO_COND = “if” “(” CONDICAO “)” “\n” DECL_OU_COMANDOS {“elsif” “(” CONDICAO “)” “\n” DECL_OU_COMANDOS} [“else” “\n” DECL_OU_COMANDOS] “end”.
COMANDO_ATR = ID "=" EXPR.
COMANDO_ITER = “while” “(” CONDICAO “)” “\n” DECL_OU_COMANDOS “\n” “end”.
CHAMADA_FUNCAO = ID(PARAM {“,” PARAM}).
PARAM = EXPR | CONDICAO.
COMANDO_ENTR = “input” LISTA_MEM.
LISTA_MEM = ID {“,” ID}.
COMANDO_SAIDA =	“output” LISTA_EXPR.
LISTA_EXPR = EXPR {“,” EXPR}.
COMANDO_RETORNO = “return” EXPR.
COMANDO_CAST = “(” ID “)” EXPR.
DECL_OU_COMANDO = DECL_VAR | COMANDO.
DECL_OU_COMANDOS = {DECL_OU_COMANDO “\n”}.
DECL_FUNCAO = ID ID(DECL_PARAMS) “\n” {DECL_OU_COMANDO “\n”} “end”.
DECL_GERAL = DECL_SIMP_VAR | DECL_AGREG_HOM | DECL_AGREG_HET | DECL_TIPO | DECL_FUNCAO.
PROGRAM = {DECL_GERAL “\n”} “int” “main” “(” “)” “\n” {DECL_OU_COMANDO “\n”} “end”.